repeat wait() until game:IsLoaded()  -- anti afk
    game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local DiscordLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()
local win = DiscordLib:Window("ASX GRAM HUB https://discord.gg/FAPCdbW9q6 discord: grammerscripting")

local serv = win:Server("Blade Ball", "")

local AutoChannel = serv:Channel("Auto Channel")

_G.AutoMediumRange = true


function AutoMediumRange()
    shared.config = {
        adjustment = 3.7, -- // Keep this between 3 to 4 \\ --
        hit_range = 0.85, -- // You can mess around with this \\ --
     
        mode = 'Hold', -- // Hold , Toggle , Always \\ --
        deflect_type = 'Remote', -- // Key Press , Remote \\ --
        notifications = false,
        keybind = Enum.KeyCode.E
     }
     
     
     
     if getgenv().executed then return end
     
     local UserInputService = game:GetService("UserInputService")
     local ReplicatedStorage = game:GetService("ReplicatedStorage")
     
     local LocalPlayer = game:GetService("Players").LocalPlayer
     local Balls = game:GetService("Workspace").Balls
     
     local IsTargeted = false
     local CanHit = false
     
     function FindBall()
         local RealBall
     
         for i, v in pairs(Balls:GetChildren()) do
             if v:GetAttribute("realBall") == true then
                 RealBall = v
             end
         end
         return RealBall
     end
       
     function IsTarget()
         local Ball = FindBall()
         
         
         if Ball and Ball:GetAttribute("target") == LocalPlayer.Name then
             return true
         end
         return false
     end
     
     function DetectBall()
         local Ball = FindBall()
         
           if Ball then
             local BallVelocity = Ball.Velocity.Magnitude
             local BallPosition = Ball.Position
       
             local PlayerPosition = LocalPlayer.Character.HumanoidRootPart.Position
       
             local Distance = (BallPosition - PlayerPosition).Magnitude
             local PingAccountability = BallVelocity * (game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000)
       
             Distance -= PingAccountability
             Distance -= shared.config.adjustment
       
             local Hit = Distance / BallVelocity
       
             if Hit <= shared.config.hit_range then
                 return true
             end
         end
         return false
     end
     
     function DeflectBall()
         if IsTargeted and DetectBall() then
             if shared.config.deflect_type == 'Key Press' then
                 keypress(0x46)
             else
                 ReplicatedStorage.Remotes.ParryButtonPress:Fire()
             end
         end
     end
     
     UserInputService.InputBegan:Connect(function(Input, IsTyping)
         if IsTyping then return end
         if shared.config.mode == 'Toggle' and Input.KeyCode == shared.config.keybind then
           CanHit = not CanHit
             if shared.config.notifications then
                 game:GetService("StarterGui"):SetCore("SendNotification",{
                     Title = "Blade Ball",
                     Text = CanHit and 'Enabled!' or 'Disabled!',
                 })
             end
         elseif shared.config.mode == 'Hold' and Input.KeyCode == shared.config.keybind and shared.config.notifications then
             game:GetService("StarterGui"):SetCore("SendNotification",{
                 Title = "grammerscripts hub",
                 Text = 'Enabled',
             })
         end
     end)
     
     UserInputService.InputEnded:Connect(function(Input, IsTyping)
         if IsTyping then return end
         if shared.config.mode == 'Hold' and Input.KeyCode == shared.config.keybind and shared.config.notifications then
             game:GetService("StarterGui"):SetCore("SendNotification",{
                 Title = "grammerscripts hub",
                 Text = 'Disabled',
             })
         end
     end)
     
     game:GetService('RunService').PostSimulation:Connect(function()
         IsTargeted = IsTarget()
     
         if shared.config.mode == 'Hold' and UserInputService:IsKeyDown(shared.config.keybind) then
             DeflectBall()
         elseif shared.config.mode == 'Toggle' and CanHit then
             DeflectBall()
         elseif shared.config.mode == 'Always' then
             DeflectBall()
         end
     end)
     
     getgenv().executed = true
end

AutoChannel:Label("Once you enable something, hold E or press it once to activate auto-parry")

AutoChannel:Toggle(
    "Turn On To Enable Medium Range Parry",
    false,
    function(bool)
        _G.AutoMediumRange = bool
        AutoMediumRange()
    end
)

